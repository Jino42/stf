#ifndef PARTICLE_DATA_HL
# define PARTICLE_DATA_HL

typedef struct s_ParticleData {
	float3          position; 	// Center point of particle
	float3          velocity; 	// Current particle velocity
	float4          color;    	// Particle color
	float           rotate;  	// Rotate the particle center
	float           size;    	// Size of the particle
	float           age;
	float           lifeTime;	//If < 0 = Inifite lifeTime
	int             index;
} ParticleData;

typedef struct s_ParticleSpriteData {
    float2      offset1;
    float2      offset2;
    float       blend;
} ParticleSpriteData;


bool particleIsActive(__global ParticleData const *particle)
{
    return !particle->lifeTime || particle->age < particle->lifeTime;
}

void resetParticleData(__global ParticleData *particle)
{
    particle->position = (float3)(0.f, 0.f, 0.f);
    particle->velocity = (float3)(0.f, 0.f, 0.f);
    particle->color = (float4)(0.f, 0.f, 0.f, 1.f);
    particle->rotate = 0.f;
    particle->size = 1.f;
    particle->age = 0.f;
    //particle->lifeTime = 5.f;
}
#endif